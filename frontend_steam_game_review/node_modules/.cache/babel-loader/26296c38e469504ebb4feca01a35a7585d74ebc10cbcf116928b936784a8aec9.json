{"ast":null,"code":"var _jsxFileName = \"/Users/choidonghwan/Desktop/frontend_steam_game_review /frontend_steam_game_review/src/features/gameInfo/CommentsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { __addComment, __getComments } from \"../../reduex/modules/commentsSlice\";\nimport CommentsCard from \"./CommentsCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsForm = () => {\n  _s();\n  //토큰여부\n  const token = localStorage.getItem(\"token\");\n\n  // 게임인포에서 보내는 게임 아이디값\n  const {\n    id\n  } = useParams();\n  // console.log(\"코멘트폼 파람값?\", id);\n\n  //게임아이디를 넣기위한 선언문\n  const postId = id;\n  const [comment, setComment] = useState({\n    comment: \"\",\n    postId: id\n  });\n  const dispatch = useDispatch();\n  const comments = useSelector(state => state.comments.comments);\n  // console.log(\"셀렉터 코멘츠?\", comments);\n\n  //코멘트 입력\n  const onChangeHandler = event => {\n    //토큰여부에 따라 등록 가능\n    if (!token) {\n      return alert(\"로그인을 해주세요\");\n    }\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(name, value);\n    setComment({\n      ...comment,\n      [name]: value\n    });\n    // console.log(\"코멘트 입력 값\", comment);\n  };\n\n  //코멘트 POST 요청\n  const addComment = () => {\n    if (comment.comment.trim() === \"\") {\n      return alert(\"내용을 입력하세요.\");\n    }\n    dispatch(__addComment({\n      postId: id,\n      ...comment\n    }));\n    setComment({\n      comment: \"\"\n    });\n    // console.log(\"에드코멘트의 값\", comment, id);\n  };\n\n  //코멘트가 추가될때마다 렌더링 해준다. 해당 게임에 맞는 코멘트를 불러오기위해 아이디값을 넣어준다\n  useEffect(() => {\n    dispatch(__getComments(postId));\n  }, [dispatch]);\n  // console.log(\"성크로 보내는 아이디값?\", postId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CommentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CommentBar, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uACE0\\uAC1D \\uD3C9\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          size: 40,\n          onChange: onChangeHandler,\n          name: \"comment\",\n          type: \"text\",\n          value: comment.comment,\n          placeholder: \"\\uCF54\\uBA58\\uD2B8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uAC00\\uC7A5 \\uC720\\uC6A9\\uD55C \\uD3C9\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentBox, {\n        children: comments === null || comments === void 0 ? void 0 : comments.map(comment => /*#__PURE__*/_jsxDEV(CommentsCard, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentsForm, \"SvB6kb6sM/Q3RUVYCGMnM1081cM=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = CommentsForm;\nexport default CommentsForm;\nconst CommentContainer = styled.div`\n  /* border: 1px solid white; */\n\n  width: 100%;\n  height: 550px;\n\n  margin: 20px auto;\n\n  color: white;\n  font-weight: 700;\n\n  input {\n    width: 85%;\n    height: 20px;\n    margin-left: 10px;\n    padding: 5px;\n\n    border: none;\n    border-radius: 5px;\n    font-size: large;\n  }\n  button {\n    padding: 8px 13px;\n    margin-left: 20px;\n    font-weight: 700;\n    font-size: 20px;\n\n    color: white;\n    border: none;\n    border-radius: 5px;\n    background-color: #75b022;\n    cursor: pointer;\n  }\n`;\n_c2 = CommentContainer;\nconst CommentBar = styled.div`\n  background-color: #171a21;\n\n  padding: 10px;\n  height: 70px;\n  margin-bottom: 10px;\n`;\n_c3 = CommentBar;\nconst CommentBox = styled.div`\n  /* border: 1px solid white; */\n\n  padding-top: 10px;\n\n  height: 500px;\n\n  overflow-x: hidden;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n    border-radius: 6px;\n    background: rgba(255, 255, 255, 0.4);\n  }\n  &::-webkit-scrollbar-thumb {\n    background: rgba(0, 0, 0, 0.3);\n    border-radius: 6px;\n  }\n`;\n_c4 = CommentBox;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CommentsForm\");\n$RefreshReg$(_c2, \"CommentContainer\");\n$RefreshReg$(_c3, \"CommentBar\");\n$RefreshReg$(_c4, \"CommentBox\");","map":{"version":3,"names":["React","useState","useEffect","styled","useDispatch","useSelector","useParams","__addComment","__getComments","CommentsCard","CommentsForm","token","localStorage","getItem","id","postId","comment","setComment","dispatch","comments","state","onChangeHandler","event","alert","name","value","target","console","log","addComment","trim","map","CommentContainer","div","CommentBar","CommentBox"],"sources":["/Users/choidonghwan/Desktop/frontend_steam_game_review /frontend_steam_game_review/src/features/gameInfo/CommentsForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  __addComment,\n  __getComments,\n} from \"../../reduex/modules/commentsSlice\";\nimport CommentsCard from \"./CommentsCard\";\n\nconst CommentsForm = () => {\n  //토큰여부\n  const token = localStorage.getItem(\"token\");\n\n  // 게임인포에서 보내는 게임 아이디값\n  const { id } = useParams();\n  // console.log(\"코멘트폼 파람값?\", id);\n\n  //게임아이디를 넣기위한 선언문\n  const postId = id;\n\n  const [comment, setComment] = useState({ comment: \"\", postId: id });\n  const dispatch = useDispatch();\n  const comments = useSelector((state) => state.comments.comments);\n  // console.log(\"셀렉터 코멘츠?\", comments);\n\n  //코멘트 입력\n  const onChangeHandler = (event) => {\n    //토큰여부에 따라 등록 가능\n    if (!token) {\n      return alert(\"로그인을 해주세요\");\n    }\n\n    const { name, value } = event.target;\n    console.log(name, value);\n    setComment({\n      ...comment,\n      [name]: value,\n    });\n    // console.log(\"코멘트 입력 값\", comment);\n  };\n\n  //코멘트 POST 요청\n  const addComment = () => {\n    if (comment.comment.trim() === \"\") {\n      return alert(\"내용을 입력하세요.\");\n    }\n    dispatch(__addComment({ postId: id, ...comment }));\n    setComment({ comment: \"\" });\n    // console.log(\"에드코멘트의 값\", comment, id);\n  };\n\n  //코멘트가 추가될때마다 렌더링 해준다. 해당 게임에 맞는 코멘트를 불러오기위해 아이디값을 넣어준다\n  useEffect(() => {\n    dispatch(__getComments(postId));\n  }, [dispatch]);\n  // console.log(\"성크로 보내는 아이디값?\", postId);\n  return (\n    <div>\n      <CommentContainer>\n        <CommentBar>\n          <div>고객 평가</div>\n          <input\n            size={40}\n            onChange={onChangeHandler}\n            name=\"comment\"\n            type=\"text\"\n            value={comment.comment}\n            placeholder=\"코멘트를 입력하세요.\"\n          ></input>\n          <button onClick={addComment}>등록</button>\n        </CommentBar>\n        <div>가장 유용한 평가</div>\n\n        <CommentBox>\n          {/* 서버에서 데이터 불러오는동안 비동기로 처리되기 때문에 배열을 불러올 수 없음 그렇기 때문에 옵셔널 체인링을 사용 */}\n          {comments?.map((comment) => (\n            <CommentsCard key={comment.id} comment={comment} />\n          ))}\n        </CommentBox>\n\n      </CommentContainer>\n    </div>\n  );\n};\n\nexport default CommentsForm;\n\nconst CommentContainer = styled.div`\n  /* border: 1px solid white; */\n\n  width: 100%;\n  height: 550px;\n\n  margin: 20px auto;\n\n  color: white;\n  font-weight: 700;\n\n  input {\n    width: 85%;\n    height: 20px;\n    margin-left: 10px;\n    padding: 5px;\n\n    border: none;\n    border-radius: 5px;\n    font-size: large;\n  }\n  button {\n    padding: 8px 13px;\n    margin-left: 20px;\n    font-weight: 700;\n    font-size: 20px;\n\n    color: white;\n    border: none;\n    border-radius: 5px;\n    background-color: #75b022;\n    cursor: pointer;\n  }\n`;\nconst CommentBar = styled.div`\n  background-color: #171a21;\n\n  padding: 10px;\n  height: 70px;\n  margin-bottom: 10px;\n`;\n\nconst CommentBox = styled.div`\n  /* border: 1px solid white; */\n\n  padding-top: 10px;\n\n  height: 500px;\n\n  overflow-x: hidden;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n    border-radius: 6px;\n    background: rgba(255, 255, 255, 0.4);\n  }\n  &::-webkit-scrollbar-thumb {\n    background: rgba(0, 0, 0, 0.3);\n    border-radius: 6px;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}