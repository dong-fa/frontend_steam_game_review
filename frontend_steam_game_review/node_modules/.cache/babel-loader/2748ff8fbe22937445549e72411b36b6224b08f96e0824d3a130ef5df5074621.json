{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosInstance } from \"../../share/request\";\nimport axios from \"axios\";\nconst initialState = {\n  userInfo: [{\n    userid: \"\",\n    password: \"\",\n    email: \"\"\n  }],\n  error: null,\n  isLoading: false\n};\n\n//DB에서 데이터 받아오기\n//로그인 POST요청\nexport const __postLogin = createAsyncThunk(\"login\", async (payload, thunkAPI) => {\n  console.log(payload);\n  try {\n    const data = await axiosInstance.post(`/api/auth/login`, payload);\n    // axios.then((res) => {\n    //   sessionStorage.setItem(\"access_token\", res.headers.access_token);\n    //   sessionStorage.setItem(\"refresh_token\", res.headers.refresh_token);\n    //   return res;\n    // });\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __signUp = createAsyncThunk(\"signUp\", async (payload, thunkAPI) => {\n  try {\n    const data = await axiosInstance.post(`/api/auth/signup`, payload);\n    console.log(data);\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    //에러\n    console.log(error);\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __idCheck = createAsyncThunk(\"idCheck\", async (payload, thunkAPI) => {\n  try {\n    const data = await axiosInstance.post(`/signup`, payload);\n    console.log(data);\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    //에러 메세지\n    console.log(error);\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n//리덕스\nexport const loginSignUp = createSlice({\n  name: \"loginSignUp\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    //로그인\n    [__postLogin.pending]: state => {\n      state.isLoading = true;\n    },\n    [__postLogin.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      //state.isLogin = true;\n      //sessionStorage.setItem(\"userinfo\", JSON.stringify(action.payload));\n    },\n\n    [__postLogin.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    //회원가입\n    [__signUp.pending]: state => {\n      state.isLoading = true;\n    },\n    [__signUp.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.signUp.push(action.payload);\n    },\n    [__signUp.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    //아이디중복확인\n    [__idCheck.pending]: state => {\n      state.isLoading = true;\n    },\n    [__idCheck.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.signup.push(action.payload);\n    },\n    [__idCheck.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action.payload);\n    }\n  }\n});\nexport default loginSignUp.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","axios","initialState","userInfo","userid","password","email","error","isLoading","__postLogin","payload","thunkAPI","console","log","data","post","fulfillWithValue","rejectWithValue","__signUp","__idCheck","loginSignUp","name","reducers","extraReducers","pending","state","fulfilled","action","rejected","signUp","push","signup","reducer"],"sources":["/Users/choidonghwan/Desktop/frontend_steam_game_review/frontend_steam_game_review/src/reduex/modules/loginSignUp.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosInstance } from \"../../share/request\";\nimport axios from \"axios\";\n\nconst initialState = {\n  userInfo: [\n    {\n      userid: \"\",\n      password: \"\",\n      email: \"\",\n    },\n  ],\n  error: null,\n  isLoading: false,\n};\n\n//DB에서 데이터 받아오기\n//로그인 POST요청\nexport const __postLogin = createAsyncThunk(\n  \"login\",\n  async (payload, thunkAPI) => {\n    console.log(payload);\n    try {\n      const data = await axiosInstance.post(`/api/auth/login`, payload);\n      // axios.then((res) => {\n      //   sessionStorage.setItem(\"access_token\", res.headers.access_token);\n      //   sessionStorage.setItem(\"refresh_token\", res.headers.refresh_token);\n      //   return res;\n      // });\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\nexport const __signUp = createAsyncThunk(\n  \"signUp\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axiosInstance.post(`/api/auth/signup`, payload);\n      console.log(data);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      //에러\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __idCheck = createAsyncThunk(\n  \"idCheck\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axiosInstance.post(`/signup`, payload);\n      console.log(data);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      //에러 메세지\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\n//리덕스\nexport const loginSignUp = createSlice({\n  name: \"loginSignUp\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    //로그인\n    [__postLogin.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__postLogin.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      //state.isLogin = true;\n      //sessionStorage.setItem(\"userinfo\", JSON.stringify(action.payload));\n    },\n    [__postLogin.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    //회원가입\n    [__signUp.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__signUp.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.signUp.push(action.payload);\n    },\n    [__signUp.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    //아이디중복확인\n    [__idCheck.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__idCheck.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.signup.push(action.payload);\n    },\n    [__idCheck.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      console.log(action.payload);\n    },\n  },\n});\n\nexport default loginSignUp.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}