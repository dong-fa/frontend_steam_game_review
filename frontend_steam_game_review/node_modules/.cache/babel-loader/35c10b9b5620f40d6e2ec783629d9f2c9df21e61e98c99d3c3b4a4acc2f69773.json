{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosInstance } from \"../../share/request\";\nimport axios from \"axios\"; // axios import 합니다.\n\nconst initialState = {\n  comments: [],\n  comment: {\n    id: 0,\n    comment: \"\"\n  },\n  disabledToggle: false,\n  isLoading: false,\n  error: null\n};\nexport const __getComments = createAsyncThunk(\"getComments\", async (payload, thunkAPI) => {\n  console.log(\"겟 페이로드\", payload);\n  try {\n    const data = await axios.get(`http://localhost:3001/comments?postId=${payload}`); //로컬용\n    // const data = await axiosInstance.get(`/detail/comment/${payload}`);\n    // console.log(\"리듀서 겟 받기\", data);\n\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    console.log(error);\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __addComment = createAsyncThunk(\"addComment\", async (payload, thunkAPI) => {\n  console.log(\"에드 페이로드\", payload);\n  try {\n    const data = await axios.post(\"http://localhost:3001/comments\", payload); //로컬용\n    // const data = await axiosInstance.post(\n    //   `/detail/comment/${payload.postId}`,\n    //   payload\n    // );\n    // console.log(data);\n    // console.log(\"코멘트 페이로드\", payload);\n    return thunkAPI.fulfillWithValue(data.data);\n  } catch (error) {\n    console.log(error);\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __deleteComment = createAsyncThunk(\"deleteComment\", async (payload, thunkAPI) => {\n  console.log(\"딜리트 페이로드\", payload);\n  try {\n    const data = await axios.delete(`http://localhost:3001/comments/${payload}`);\n    // // const data = await axiosInstance.delete(\n    // //   `/detail/comment/${payload.postId}/${payload.commentId}`\n    // );\n    console.log(\"딜리트데이터\", data);\n    return thunkAPI.fulfillWithValue(payload);\n  } catch (error) {\n    console.log(error);\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const __updateCommentDetail = createAsyncThunk(\n//업데이트\n\"todos/update_comments\", async (payload, thunkAPI) => {\n  try {\n    const updateComment = payload.updateComment;\n    await axios.patch(`http://localhost:3001/comments/${updateComment.id}`, updateComment);\n    return thunkAPI.fulfillWithValue(updateComment);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const commentsSlice = createSlice({\n  name: \"comments\",\n  // name: \"comment\",\n  initialState,\n  reducers: {\n    isDisabledToggle: (state, action) => {\n      console.log(action);\n      console.log(state);\n      state.disabledToggle = action.payload;\n    }\n  },\n  extraReducers: {\n    // get 받아오는 리듀서\n    [__getComments.pending]: state => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n\n    [__getComments.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.comments = action.payload;\n      console.log(\"풀필드\", state.comments);\n    },\n    [__getComments.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n\n    // post 보내는 리듀서\n    [__addComment.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.comments.push(action.payload);\n    },\n    [__addComment.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n\n    // delete 리듀서\n    [__deleteComment.fulfilled]: (state, action) => {\n      console.log(state.comments);\n      const target = state.comments.findIndex(comment => comment.id === action.payload);\n      console.log(\"액션페이로드\", action.payload);\n      state.comments.splice(target, 1); // state 변화 생김\n    },\n\n    [__deleteComment.pending]: state => {\n      state.isLoading = true;\n    },\n    [__deleteComment.rejected]: () => {},\n    // update 리듀서\n    [__updateCommentDetail.pending]: (state, action) => {\n      state.isLoading = true;\n    },\n    [__updateCommentDetail.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      const target = state.comments.findIndex(comment => comment.id === action.payload.id);\n      state.comments.splice(target, 1, action.payload);\n    },\n    [__updateCommentDetail.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  isDisabledToggle\n} = commentsSlice.actions;\nexport default commentsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","axios","initialState","comments","comment","id","disabledToggle","isLoading","error","__getComments","payload","thunkAPI","console","log","data","get","fulfillWithValue","rejectWithValue","__addComment","post","__deleteComment","delete","__updateCommentDetail","updateComment","patch","commentsSlice","name","reducers","isDisabledToggle","state","action","extraReducers","pending","fulfilled","rejected","push","target","findIndex","splice","actions","reducer"],"sources":["/Users/choidonghwan/Desktop/frontend_steam_game_review /frontend_steam_game_review/src/reduex/modules/commentsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { axiosInstance } from \"../../share/request\";\nimport axios from \"axios\"; // axios import 합니다.\n\nconst initialState = {\n  comments: [],\n  comment: {\n    id: 0,\n    comment: \"\",\n  },\n  disabledToggle: false,\n  isLoading: false,\n  error: null,\n};\n\nexport const __getComments = createAsyncThunk(\n  \"getComments\",\n  async (payload, thunkAPI) => {\n    console.log(\"겟 페이로드\", payload);\n    try {\n      const data = await axios.get(\n        `http://localhost:3001/comments?postId=${payload}`\n      ); //로컬용\n      // const data = await axiosInstance.get(`/detail/comment/${payload}`);\n      // console.log(\"리듀서 겟 받기\", data);\n\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\nexport const __addComment = createAsyncThunk(\n  \"addComment\",\n  async (payload, thunkAPI) => {\n    console.log(\"에드 페이로드\", payload);\n    try {\n      const data = await axios.post(\"http://localhost:3001/comments\", payload); //로컬용\n      // const data = await axiosInstance.post(\n      //   `/detail/comment/${payload.postId}`,\n      //   payload\n      // );\n      // console.log(data);\n      // console.log(\"코멘트 페이로드\", payload);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __deleteComment = createAsyncThunk(\n  \"deleteComment\",\n  async (payload, thunkAPI) => {\n    console.log(\"딜리트 페이로드\", payload);\n    try {\n      const data = await axios.delete(\n        `http://localhost:3001/comments/${payload}`\n      );\n      // // const data = await axiosInstance.delete(\n      // //   `/detail/comment/${payload.postId}/${payload.commentId}`\n      // );\n      console.log(\"딜리트데이터\", data);\n      return thunkAPI.fulfillWithValue(payload);\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\nexport const __updateCommentDetail = createAsyncThunk(\n  //업데이트\n  \"todos/update_comments\",\n  async (payload, thunkAPI) => {\n    try {\n      const updateComment = payload.updateComment;\n      await axios.patch(\n        `http://localhost:3001/comments/${updateComment.id}`,\n        updateComment\n      );\n      return thunkAPI.fulfillWithValue(updateComment);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const commentsSlice = createSlice({\n  name: \"comments\",\n  // name: \"comment\",\n  initialState,\n  reducers: {\n    isDisabledToggle: (state, action) => {\n      console.log(action);\n      console.log(state);\n      state.disabledToggle = action.payload;\n    },\n  },\n  extraReducers: {\n    // get 받아오는 리듀서\n    [__getComments.pending]: (state) => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n    [__getComments.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.comments = action.payload;\n      console.log(\"풀필드\", state.comments);\n    },\n    [__getComments.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    // post 보내는 리듀서\n    [__addComment.fulfilled]: (state, action) => {\n      state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.comments.push(action.payload);\n    },\n    [__addComment.rejected]: (state, action) => {\n      state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    // delete 리듀서\n    [__deleteComment.fulfilled]: (state, action) => {\n      console.log(state.comments);\n      const target = state.comments.findIndex(\n        (comment) => comment.id === action.payload\n      );\n      console.log(\"액션페이로드\", action.payload);\n      state.comments.splice(target, 1); // state 변화 생김\n    },\n    [__deleteComment.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__deleteComment.rejected]: () => {},\n\n    // update 리듀서\n    [__updateCommentDetail.pending]: (state, action) => {\n      state.isLoading = true;\n    },\n    [__updateCommentDetail.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      const target = state.comments.findIndex(\n        (comment) => comment.id === action.payload.id\n      );\n      state.comments.splice(target, 1, action.payload);\n    },\n    [__updateCommentDetail.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { isDisabledToggle } = commentsSlice.actions;\nexport default commentsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}